@model IEnumerable<Referee.Models.Game>
@using Referee.Helpers 
<script type="text/javascript" src="@Url.Content("~/Scripts/custom/custom.js")" ></script>       

@{ 
    ViewData["PageTitle"] = ((Referee.Models.League)ViewBag.DefaultLeague).Name;
    ViewData["IconName"] = "icon-user-2";
}

@Html.Partial("_ContentTop", ViewData)

@Html.Partial("_BarLeagues", (IEnumerable<Referee.Models.League>)ViewBag.ListOfLeagues)
 
<div class="wrapper">
    <div class="widget">
        <div class="whead">
            <h6>Lista meczy w @ViewData["PageTitle"]</h6>
            <ul class="titleToolbar">
                <li>@Html.AuthLink("Dodaj nowy mecz", "Create", "Game", new { LeagueId = ((Referee.Models.League)ViewBag.DefaultLeague).Id}, new { })</li>
            </ul>
            <div class="clear"></div>
        </div>
        <table cellpadding="0" cellspacing="0" width="100%" class="tAlt wGeneral">
        <thead>
            <tr>
                <td>
                    Mecz
                </td>
                <td>
                    Data
                </td>
                <td>
                    Godzina
                </td>
                <td>
                    Wynik
                </td>            
                <td></td>
            </tr>
        </thead>
        <tbody>

    @foreach (var item in Model)
    {
        
        ///TODO zrobić rozróżnianie czy wyświetlać mecz jak user jest niezalogowany w zależności od parametru published
        ///if (item.Published && !User.Identity.IsAuthenticated)
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.HostTeam)
                -
                    @Html.DisplayFor(modelItem => item.GuestTeam)
                </td>
                <td>
                    @item.DateAndTime.ToShortDateString()
                </td>
                <td>
                    @item.DateAndTime.ToShortTimeString()
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Score)
                </td>
                <td>
                    @Html.AuthLink("Obsada", "Create", "Nomination", new { EventId = item.Id, @Type = "game" }, new { @class = "tablectrl_small bDefault tipS", @title = "Edytuj mecz" })
                    @Html.AuthLink("Edytuj", "Edit", "Game", new { id = item.Id }, new { @class = "tablectrl_small bDefault tipS", @title = "Edytuj mecz" })
                    @Html.AuthLink("Pokaż", "Details", "Game", new { id = item.Id }, new { @class = "tablectrl_small bDefault tipS", @title = "Pokaż szczegóły" })
                    @Html.AuthLink("Usuń", "Delete", "Game", new { id = item.Id }, new { @class = "tablectrl_small bDefault tipS openableDialogContenerButton", @title = "Usuń mecz" })
                </td>
            </tr>
    }

        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="10">Brak meczy dla tej ligi.</td>
            </tr>

        }
        </tbody>
    </table>
        <div id="openableDialogContener" class="dialog" title=""></div>
    </div>
</div>

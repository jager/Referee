@model IEnumerable<Referee.ViewModels.NominationDetails>
@using Referee.Helpers
@Html.Partial("_ContentTop", ViewData)

@Html.Partial("_CustomBreadcrumbBar", ViewData)

@{
    bool CanConfirm = false;
}
<script type="text/javascript" src="@Url.Content("~/Scripts/custom/custom.js")" ></script>
<div class="wrapper">
    @using (Html.BeginForm("Index", "Nomination", FormMethod.Get ))
    {
        <div class="widget fluid">
        <div class="whead"><h6>Wyszukaj obsad</h6><div class="clear"></div></div>
        <div class="formRow">
            <div class="grid1"><label>OD:</label></div>
            <div class="grid2">
                @Html.TextBox("dtStart", (string)ViewBag.dtStart, new { @class = "datepicker"})
            </div>
            <div class="grid1"><label>DO:</label></div>
            <div class="grid2">
                
                @Html.TextBox("dtEnd", (string)ViewBag.dtEnd, new { @class = "datepicker"})
            </div>
            <div class="grid2">
                @Html.DropDownList("league", (SelectList)ViewBag.Leagues, "Wybierz ligę")                
            </div>
            <div class="grid2">
                <input type="submit" value="Wyszukaj obsad" name="SearchSubmit" class="buttonS bBlue" />
            </div>
            <div class="grid2">
                <a href="/Nomination" class="buttonS bGold" >Pokaż wszystkie obsady</a>
            </div>
            <div class="clear"></div>
        </div>
    </div>
    }
    <div class="widget">
    <div class="whead">
        <h6>Obsady sędziowskie</h6>
        <div class="clear"></div>
    </div>    
    <table cellpadding="0" cellspacing="0" width="100%" class="tDefault">
        <thead>
            <tr>
                <td>
                    Mecz/Turniej
                </td>
                <td>
                    Liga
                </td>
                <td>
                    Data
                </td>
                <td>
                    Godzina
                </td>
                <td>
                    Pozostali sędziowie
                </td>
                @if (User.Identity.IsAuthenticated && User.IsInRole(HelperRoles.RefereatObsad))
                {
                    <td>
                        Opublikowana
                    </td>                                        
                }
                    <td></td>
            </tr>
        </thead>
        <tbody>

@foreach (var item in Model)
{
    CanConfirm = false;
    if (item.Nomination.Published || (User.Identity.IsAuthenticated && User.IsInRole(HelperRoles.RefereatObsad)))
    {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Event.Name)
                </td>
                <td>
                    @if(!String.IsNullOrEmpty(item.Event.League)) 
                    {
                        @Html.DisplayFor(modelItem => item.Event.League)
                        //@Html.ActionLink(item.Event.League, "Index", "Game", new { LeagueId = item.Event.LeagueId })
                    }   
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Event.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Event.Time)
                </td>
                <td>
                    @if (item.NominatedReferees.Count() > 0)
                    {
                        foreach (var referee in item.NominatedReferees)
                        {
                            CanConfirm = ((Referee.Models.RefereeEntity)ViewBag.CurrentReferee).Id == referee.RefereeId || CanConfirm ? true : false;
                            if (referee.Confirmed) 
                            {
                                @Html.AuthLink(String.Format("Sędzia {0}: {1}", referee.Function.Name, referee.Referee.FullName),
                                               "Details",
                                               "Referee",
                                               new { @id = referee.RefereeId },
                                               new { @class = "greenBack" },
                                               HelperRoles.Sedzia)
                            }
                            else
                            {
                                @Html.AuthLink(String.Format("Sędzia {0}: {1}", referee.Function.Name, referee.Referee.FullName),
                                               "Details",
                                               "Referee",
                                               new { @id = referee.RefereeId },
                                               new { },
                                               HelperRoles.Sedzia)
                            }
                            
                            <br />
                        }
                    }        
                </td>
                @if (User.Identity.IsAuthenticated && User.IsInRole(HelperRoles.RefereatObsad))
                {
                    <td>
                        @if (item.Nomination.Published)
                        {
                            <span class="fileSuccess"></span>
                            @item.Nomination.PublishDate
                        }
                        else
                        {
                            <span class="fileError"></span>
                        }
                    </td>
                }    
                <td class="tableActs" align="center">
                    @Html.AuthLink("Pokaż", "Details", "Nomination", new { id = item.Nomination.Id }, new { @class = "tablectrl_small bDefault tipS", @title = "Pokaż szczegóły" }, HelperRoles.Sedzia)
                    @if (ViewBag.CurrentReferee != null && CanConfirm) 
                    {
                        @Html.AuthLink("Potwierdź", "Confirm", "Nomination", new { id = item.Nomination.Id, rid = ((Referee.Models.RefereeEntity)ViewBag.CurrentReferee).Id }, new { @class = "tablectrl_small bDefault tipS confirmButton", @title = "Potwierdź nominacje" }, HelperRoles.Sedzia)
                    }
                    @Html.AuthLink("Edytuj", "Edit", "Nomination", new { id = item.Nomination.Id }, new { @class = "tablectrl_small bDefault tipS", @title = "Zmień obsadę" }, HelperRoles.RefereatObsad)
                    @Html.AuthLink("Usuń", "Delete", "Nomination", new { id = item.Nomination.Id }, new { @class = "tablectrl_small bDefault tipS openableDialogContenerButton", @title = "Usuń obsadę" }, HelperRoles.RefereatObsad)
                </td>
            </tr>
    }
}
        </tbody>
    </table>
    <div id="openableDialogContener" class="dialog" title=""></div>
    </div>
</div>